/*
 *  Armadillo Workflow Platform v1.0
 *  A simple pipeline system for phylogenetic analysis
 *  
 *  Copyright (C) 2009-2012  Etienne Lord, Mickael Leclercq
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package editors;


import workflows.workflow_properties;
import configuration.Config;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import editor.EditorInterface;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import program.programs;
import workflows.armadillo_workflow;
import workflows.workflow_properties_dictionnary;

/**
 * Editor of the object properties in the Main Workflow
 * Note: Only called if object doesnt have a Custum Editor
 * 
 * @author Etienne Lord and  Med Amine Remita 
 * @since March 2011
 */
public class MrBayesEditor extends javax.swing.JDialog implements EditorInterface {

    ////////////////////////////////////////////////////////////////////////////
    /// VARIABLES

    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
   
    ////////////////////////////////////////////////////////////////////////////
    /// CONSTANT

    public final String defaultNameString=" Name";

    /** Creates new form propertiesJDialog */
    public MrBayesEditor(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
        //connectorinfobox=new ConnectorInfoBox(parent); //--Used to display Connector info
        //--Initialize component
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        ClosejButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nucmodel_ComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        nst_ComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        rates_ComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        Omegavar_ComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        covarion_ComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        datatype_ComboBox1 = new javax.swing.JComboBox();
        OutgroupjCheckBox1 = new javax.swing.JCheckBox();
        Outgroup_jTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        statefreq_ComboBox1 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        coding_ComboBox2 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        aamodel_ComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        replicate_TextField = new javax.swing.JTextField();
        sampleFreq_TextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sump_TextField1 = new javax.swing.JTextField();
        sumt_TextField2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NamejTextField = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setTitle("Properties");
        setResizable(false);

        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        ClosejButton.setText("<html><b>Close</b></html>");
        ClosejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButtonActionPerformed(evt);
            }
        });

        jButton5.setText("Run");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setText("Stop");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton6.setText("Reset default values");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Evolutionary model & Datatype"));

        jLabel4.setText("Model DNA (lset nucmodel)");

        nucmodel_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4by4", "doublet", "codon" }));
        nucmodel_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nucmodel_ComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Substitution Rates (lset nst/prset aarevmatpr)");

        nst_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "F81 (1)", "HKY (2)", "GTR (6)" }));
        nst_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nst_ComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Across Site Rate Variation (lset rates)");

        rates_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "equal", "gamma", "propinv", "invgamma", "adgamma" }));
        rates_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rates_ComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Across Site Omega Variation (lset omegavar)");

        Omegavar_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "equal", "Ny98", "M3" }));
        Omegavar_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Omegavar_ComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("Across Tree Rate Variation (lset covarion)");

        covarion_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "yes", "no" }));
        covarion_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                covarion_ComboBoxActionPerformed(evt);
            }
        });

        jLabel11.setText("Datatype");

        datatype_ComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DNA", "RNA", "Protein", "Restriction", "Standard" }));
        datatype_ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datatype_ComboBox1ActionPerformed(evt);
            }
        });

        OutgroupjCheckBox1.setText("Outgroup (Optional - sequence number)");
        OutgroupjCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutgroupjCheckBox1ActionPerformed(evt);
            }
        });

        Outgroup_jTextField.setText("1");
        Outgroup_jTextField.setEnabled(false);
        Outgroup_jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Outgroup_jTextFieldFocusLost(evt);
            }
        });

        jLabel13.setText("State frequencies  (prset statefreqpr/symdirihyperpr)");

        statefreq_ComboBox1.setEditable(true);
        statefreq_ComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "fixed(equal)", "fixed(empirical)" }));
        statefreq_ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statefreq_ComboBox1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Coding bias (lset coding)");

        coding_ComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "all", "variable", "nopresencesites", "noabsencesites" }));
        coding_ComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coding_ComboBox2ActionPerformed(evt);
            }
        });

        jLabel15.setText("Model PROTEIN (lset aamodelpr)");

        aamodel_ComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "equalin", "gtr", "poisson", "jones", "dayhoff", "mtrev", "mtmam", "wag", "rtrev", "cprev", "vt", "blossum" }));
        aamodel_ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aamodel_ComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(123, 123, 123))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(OutgroupjCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                                .addGap(9, 9, 9)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coding_ComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 89, Short.MAX_VALUE)
                            .addComponent(Outgroup_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(covarion_ComboBox, 0, 89, Short.MAX_VALUE)
                            .addComponent(Omegavar_ComboBox, 0, 89, Short.MAX_VALUE)
                            .addComponent(rates_ComboBox, 0, 89, Short.MAX_VALUE)
                            .addComponent(nst_ComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 89, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(nucmodel_ComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datatype_ComboBox1, 0, 89, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(aamodel_ComboBox1, 0, 89, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statefreq_ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datatype_ComboBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nucmodel_ComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aamodel_ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statefreq_ComboBox1)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(coding_ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nst_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rates_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Omegavar_ComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(covarion_ComboBox))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OutgroupjCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Outgroup_jTextField)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Summarizing the samples"));

        jLabel30.setText("Number of replicates (normally 100 or 1000) (ngen)");

        jLabel31.setText("Sample tree frequencies (samplefeq) ");

        replicate_TextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        replicate_TextField.setText("10000");
        replicate_TextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                replicate_TextFieldFocusLost(evt);
            }
        });

        sampleFreq_TextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sampleFreq_TextField.setText("100");
        sampleFreq_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleFreq_TextFieldActionPerformed(evt);
            }
        });
        sampleFreq_TextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sampleFreq_TextFieldFocusLost(evt);
            }
        });

        jLabel9.setText("Parameter values (sump)");

        jLabel10.setText("Tree (sumt)");

        sump_TextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sump_TextField1.setText("250");
        sump_TextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sump_TextField1ActionPerformed(evt);
            }
        });
        sump_TextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sump_TextField1FocusLost(evt);
            }
        });

        sumt_TextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sumt_TextField2.setText("250");
        sumt_TextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumt_TextField2ActionPerformed(evt);
            }
        });
        sumt_TextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sumt_TextField2FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sumt_TextField2)
                    .addComponent(sump_TextField1)
                    .addComponent(sampleFreq_TextField)
                    .addComponent(replicate_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(replicate_TextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sampleFreq_TextField)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sump_TextField1)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sumt_TextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 11));
        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("Instructions: see the website http://mrbayes.csit.fsu.edu/wiki/index.php");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(437, 437, 437))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(2, 2, 2)
                .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 3, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Name");

        NamejTextField.setText(" ");
        NamejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamejTextFieldActionPerformed(evt);
            }
        });

        jButton4.setText("Rename");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(NamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton4))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addGap(14, 14, 14)
                        .addComponent(ClosejButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClosejButton, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(60, 60, 60))
        );

        jTabbedPane1.addTab("MrBayes", jPanel9);

        jButton3.setText("?");
        jButton3.setToolTipText("Help / Informations");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClosejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButtonActionPerformed
        //-- 2. Close dialog
        this.setVisible(false);
}//GEN-LAST:event_ClosejButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
}//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown

}//GEN-LAST:event_jTabbedPane1ComponentShown

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        properties.put("Name", this.NamejTextField.getText());
        parent_workflow.updateCurrentWorkflow(properties);
}//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
}//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        properties.put("Status", Config.status_nothing);
        properties.killThread();
}//GEN-LAST:event_jButton8ActionPerformed

    private void replicate_TextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_replicate_TextFieldFocusLost
       properties.put("replicate", this.replicate_TextField.getText());
    }//GEN-LAST:event_replicate_TextFieldFocusLost

    private void sampleFreq_TextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sampleFreq_TextFieldFocusLost
     properties.put("sample_freq", this.sampleFreq_TextField.getText());
    }//GEN-LAST:event_sampleFreq_TextFieldFocusLost

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       if(properties.isSet("ClassName")) {
           this.parent_workflow.workflow.updateDependance();
           programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
           prog.Run(properties);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void NamejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamejTextFieldActionPerformed

    private void sump_TextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sump_TextField1ActionPerformed
        properties.put("sump_burnin", this.sump_TextField1.getText());
    }//GEN-LAST:event_sump_TextField1ActionPerformed

    private void sumt_TextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumt_TextField2ActionPerformed
        properties.put("sumt_burnin", this.sumt_TextField2.getText());
    }//GEN-LAST:event_sumt_TextField2ActionPerformed

    private void sampleFreq_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleFreq_TextFieldActionPerformed
         properties.put("sample_freq", this.sampleFreq_TextField.getText());
    }//GEN-LAST:event_sampleFreq_TextFieldActionPerformed

    private void sump_TextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sump_TextField1FocusLost
       properties.put("sump_burnin", this.sump_TextField1.getText());
    }//GEN-LAST:event_sump_TextField1FocusLost

    private void sumt_TextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sumt_TextField2FocusLost
        properties.put("sumt_burnin", this.sumt_TextField2.getText());
    }//GEN-LAST:event_sumt_TextField2FocusLost

    private void Outgroup_jTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Outgroup_jTextFieldFocusLost
        properties.put("outgroup",this.Outgroup_jTextField.getText());
}//GEN-LAST:event_Outgroup_jTextFieldFocusLost

    private void OutgroupjCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutgroupjCheckBox1ActionPerformed
        if (this.OutgroupjCheckBox1.isSelected()){
            this.Outgroup_jTextField.setEnabled(true);
            properties.put("outgroup", this.Outgroup_jTextField.getText());
        } else{
            properties.remove("outgroup");
            this.Outgroup_jTextField.setEnabled(false);
        }
}//GEN-LAST:event_OutgroupjCheckBox1ActionPerformed

    private void datatype_ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datatype_ComboBox1ActionPerformed
        properties.put("datatype", this.datatype_ComboBox1.getSelectedItem());
        this.updateComboBox();
    }//GEN-LAST:event_datatype_ComboBox1ActionPerformed

    private void covarion_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_covarion_ComboBoxActionPerformed
        properties.put("covarion", this.covarion_ComboBox.getSelectedItem());
}//GEN-LAST:event_covarion_ComboBoxActionPerformed

    private void Omegavar_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Omegavar_ComboBoxActionPerformed
        properties.put("omegavar", this.Omegavar_ComboBox.getSelectedItem());
}//GEN-LAST:event_Omegavar_ComboBoxActionPerformed

    private void rates_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rates_ComboBoxActionPerformed
        properties.put("rates", this.rates_ComboBox.getSelectedItem());
}//GEN-LAST:event_rates_ComboBoxActionPerformed

    private void nst_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nst_ComboBoxActionPerformed
            properties.put("nst", this.nst_ComboBox.getSelectedItem());
           
}//GEN-LAST:event_nst_ComboBoxActionPerformed

    private void nucmodel_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nucmodel_ComboBoxActionPerformed
        properties.put("nucmodel", this.nucmodel_ComboBox.getSelectedItem());
        this.updateComboBox();
}//GEN-LAST:event_nucmodel_ComboBoxActionPerformed

    private void statefreq_ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statefreq_ComboBox1ActionPerformed
        properties.put("statefreqpr", this.statefreq_ComboBox1.getSelectedItem());
    }//GEN-LAST:event_statefreq_ComboBox1ActionPerformed

    private void coding_ComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coding_ComboBox2ActionPerformed
       properties.put("coding", this.coding_ComboBox2.getSelectedItem());
    }//GEN-LAST:event_coding_ComboBox2ActionPerformed

    private void aamodel_ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aamodel_ComboBox1ActionPerformed
      properties.put("aamodelpr", this.aamodel_ComboBox1.getSelectedItem());
    }//GEN-LAST:event_aamodel_ComboBox1ActionPerformed
   
    /**
     * This set the Properties
     * @param properties
     */
//nucmodel=4by4
//satefreqpr=fixed(equal)
//nst=6
//rates=gamma
//omegavar=equal
//covarion=no
//default_replicate=10000
//replicate=10000
//sample_freq=10
//sump_burnin=250
//sumt_burnin=250

    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        this.NamejTextField.setText(properties.getName());
        if (properties.isSet("datatype")) {
           this.datatype_ComboBox1.setSelectedItem(properties.get("datatype"));
        }         
        if (properties.isSet("nucmodel")) {
           this.nucmodel_ComboBox.setSelectedItem(properties.get("nucmodel"));       
        }
        if (properties.isSet("aamodelpr")) {
            this.aamodel_ComboBox1.setSelectedItem(properties.get("aamodelpr"));
        }        
        this.updateComboBox();
        
        //For prset (deleted)
        if (properties.isSet("statefreqpr")) {
           this.statefreq_ComboBox1.setSelectedItem(properties.get("statefreqpr"));
        }

        if (properties.isSet("nst")) {
          this.nst_ComboBox.setSelectedItem(properties.get("nst"));               
        }
        if (properties.isSet("rates")) {
           this.rates_ComboBox.setSelectedItem(properties.get("rates"));
        }
        if (properties.isSet("omegavar")) {
           this.Omegavar_ComboBox.setSelectedItem(properties.get("omegavar"));
        }

        if (properties.isSet("covarion")) {
           this.covarion_ComboBox.setSelectedItem(properties.get("covarion"));
        }

        if (properties.isSet("replicate")) {
            this.replicate_TextField.setText(properties.get("replicate"));
        } else {
            this.replicate_TextField.setText(properties.get("default_replicate"));
        }

        if (properties.isSet("sample_freq")) {
           this.sampleFreq_TextField.setText(properties.get("sample_freq"));
        }

        if (properties.isSet("sump_burnin")) {
           this.sump_TextField1.setText(properties.get("sump_burnin"));
        }

        if (properties.isSet("sumt_burnin")) {
           this.sumt_TextField2.setText(properties.get("sumt_burnin"));
        }
         if (properties.isSet("coding")) {
            this.coding_ComboBox2.setSelectedItem(properties.get("coding"));
        }
            
        if (properties.isSet("outgroup")) {
            this.Outgroup_jTextField.setEnabled(true);
            this.OutgroupjCheckBox1.setSelected(true);
            this.Outgroup_jTextField.setText(properties.get("outgroup"));
        } else {
            this.Outgroup_jTextField.setText("1");
            this.OutgroupjCheckBox1.setSelected(false);
            this.Outgroup_jTextField.setEnabled(false);
        }        
        
    }


    /**
     *  Echo change to other menu based on selection.
     *  This is based on the model found in MrBayes
     */
    public void updateComboBox() {
        
        ////////////////////////////////////////////////////////////////////////
        //--Restriction (0-1) or Standard (0-9)
        if (properties.get("datatype").equals("Restriction")||properties.get("datatype").equals("Standard")) {
          //--Enable/disable combobox (in order of appearance)          
          this.nucmodel_ComboBox.setEnabled(false);
          this.statefreq_ComboBox1.setEnabled(true);          
          this.coding_ComboBox2.setEnabled(true);
          this.rates_ComboBox.setEnabled(true);
          this.aamodel_ComboBox1.setEnabled(false);
          this.nst_ComboBox.setEnabled(false);       
          this.Omegavar_ComboBox.setEnabled(false);
          this.covarion_ComboBox.setEnabled(false);
          //--Put specific option in combobox
           if (properties.get("datatype").equals("Restriction")) {
               this.statefreq_ComboBox1.removeAllItems();
               this.statefreq_ComboBox1.addItem("fixed(equal)");           
               this.statefreq_ComboBox1.addItem("fixed(empirical)");           
               this.statefreq_ComboBox1.addItem("estimated");              
               this.coding_ComboBox2.removeAllItems();
               this.coding_ComboBox2.addItem("all");
               this.coding_ComboBox2.addItem("variable");
               this.coding_ComboBox2.addItem("nopresencesites");
               this.coding_ComboBox2.addItem("noabsencesites");               
           }
           if (properties.get("datatype").equals("Standard")) {
               this.statefreq_ComboBox1.removeAllItems();
               this.statefreq_ComboBox1.addItem("fixed(equal)");           
               this.statefreq_ComboBox1.addItem("fixed(empirical)");           
               this.statefreq_ComboBox1.addItem("estimated");
               this.coding_ComboBox2.removeAllItems();
               this.coding_ComboBox2.addItem("all");
               this.coding_ComboBox2.addItem("variable");
               this.coding_ComboBox2.addItem("informative");               
           }
          this.rates_ComboBox.removeAllItems();
          this.rates_ComboBox.addItem("equal");
          this.rates_ComboBox.addItem("gamma");          
        }        
        
        ////////////////////////////////////////////////////////////////////////
        //--DNA or RNA
        if (properties.get("datatype").equals("DNA")||properties.get("datatype").equals("RNA")) {
             //--Enable/disable combobox (in order of appearance)          
          this.nucmodel_ComboBox.setEnabled(true);
          this.statefreq_ComboBox1.setEnabled(true);          
          this.coding_ComboBox2.setEnabled(false);
          this.rates_ComboBox.setEnabled(true);
          this.aamodel_ComboBox1.setEnabled(false);
          this.nst_ComboBox.setEnabled(true);         
          this.Omegavar_ComboBox.setEnabled(false);
          this.covarion_ComboBox.setEnabled(true);      
          //--Put specific option in combobox
          this.statefreq_ComboBox1.removeAllItems();          
           this.statefreq_ComboBox1.addItem("fixed(equal)");
           this.statefreq_ComboBox1.addItem("fixed(empirical)");
           this.statefreq_ComboBox1.addItem("estimated");    
          //--Substitution rate
          this.nst_ComboBox.removeAllItems();
          this.nst_ComboBox.addItem("F81 (1)");
          this.nst_ComboBox.addItem("HKY (2)");
          this.nst_ComboBox.addItem("GTR (6)");
          
          if (properties.get("nucmodel").equals("4by4")) {          
              this.covarion_ComboBox.setEnabled(true);
              this.rates_ComboBox.removeAllItems();
              this.rates_ComboBox.addItem("equal");
              this.rates_ComboBox.addItem("gamma");
              this.rates_ComboBox.addItem("propinv");
              this.rates_ComboBox.addItem("invgamma");
              this.rates_ComboBox.addItem("adgamma");
          }
          if (properties.get("nucmodel").equals("doublet")) {                       
              this.rates_ComboBox.removeAllItems();
              this.rates_ComboBox.addItem("equal");
              this.rates_ComboBox.addItem("gamma");
              this.rates_ComboBox.addItem("propinv");
              this.rates_ComboBox.addItem("invgamma");              
          }
          if (properties.get("nucmodel").equals("codon")) {  
              this.Omegavar_ComboBox.setEnabled(true);
              this.rates_ComboBox.removeAllItems();
              this.rates_ComboBox.addItem("equal");
              this.rates_ComboBox.addItem("gamma");
              this.rates_ComboBox.addItem("propinv");
              this.rates_ComboBox.addItem("invgamma");              
          }
        }
        
        ////////////////////////////////////////////////////////////////////////
        //--Protein
          if (properties.get("datatype").equals("Protein")) {
             //--Enable/disable combobox (in order of appearance)          
          this.nucmodel_ComboBox.setEnabled(false);
          this.statefreq_ComboBox1.setEnabled(true);          
          this.coding_ComboBox2.setEnabled(false);
          this.rates_ComboBox.setEnabled(true);
          this.aamodel_ComboBox1.setEnabled(true);
          this.nst_ComboBox.setEnabled(false);          
          this.Omegavar_ComboBox.setEnabled(true);
          this.covarion_ComboBox.setEnabled(true);
          //--Put specific option in combobox
           this.rates_ComboBox.removeAllItems();
              this.rates_ComboBox.addItem("equal");
              this.rates_ComboBox.addItem("gamma");
              this.rates_ComboBox.addItem("propinv");
              this.rates_ComboBox.addItem("invgamma");
              this.rates_ComboBox.addItem("adgamma");
          if (properties.get("aamodelpr").equals("equalin")||properties.get("aamodel").equals("gtr")) {
              this.statefreq_ComboBox1.removeAllItems();
              this.statefreq_ComboBox1.addItem("fixed(equal)");
              this.statefreq_ComboBox1.addItem("fixed(empirical)");
              this.statefreq_ComboBox1.addItem("estimated");              
              this.nst_ComboBox.removeAllItems();
              this.nst_ComboBox.addItem("fixed");
              this.nst_ComboBox.addItem("estimated");       
          } else {
              this.statefreq_ComboBox1.removeAllItems();
             this.statefreq_ComboBox1.addItem("fixed(equal)");
              this.statefreq_ComboBox1.addItem("fixed(empirical)");
              this.statefreq_ComboBox1.addItem("estimated");              
              this.nst_ComboBox.removeAllItems();
              this.nst_ComboBox.addItem("fixed");
              this.nst_ComboBox.addItem("mixed");   
          }   
       } 
       
          
          
        
        
    }
    
    ///////////////////////////////////////////////////////////////////////////
    /// DISPLAY MAIN FUNCTION

    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // 
        //if (properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        // Set position 
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
					(screenSize.height-d.height)/2);
        this.setProperties(properties);
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }

  public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds()); 
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
           Config.log("Unable to save "+filename+" dialog image");
        }            
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClosejButton;
    private javax.swing.JTextField NamejTextField;
    private javax.swing.JComboBox Omegavar_ComboBox;
    private javax.swing.JTextField Outgroup_jTextField;
    private javax.swing.JCheckBox OutgroupjCheckBox1;
    private javax.swing.JComboBox aamodel_ComboBox1;
    private javax.swing.JComboBox coding_ComboBox2;
    private javax.swing.JComboBox covarion_ComboBox;
    private javax.swing.JComboBox datatype_ComboBox1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox nst_ComboBox;
    private javax.swing.JComboBox nucmodel_ComboBox;
    private javax.swing.JComboBox rates_ComboBox;
    private javax.swing.JTextField replicate_TextField;
    private javax.swing.JTextField sampleFreq_TextField;
    private javax.swing.JComboBox statefreq_ComboBox1;
    private javax.swing.JTextField sump_TextField1;
    private javax.swing.JTextField sumt_TextField2;
    // End of variables declaration//GEN-END:variables



}
