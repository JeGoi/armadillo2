package tutorial;

/*
 *  Armadillo Workflow Platform v1.0
 *  A simple pipeline system for phylogenetic analysis
 *  
 *  Copyright (C) 2009-2011  Etienne Lord, Mickael Leclercq
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


import configuration.Config;
import editors.HelpEditor;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.swing.JFileChooser;
import org.apache.regexp.RE;
import results.report;
import workflows.Workbox;
import workflows.workflow_properties;

public class Ancestrale_Sequence_JIternalFrame extends javax.swing.JInternalFrame {

    ////////////////////////////////////////////////////////////////////////////
    /// Variables

    Config config=new Config();
    Frame frame=null;
    Workbox workbox=new Workbox();
    boolean validEmail=false;
    boolean validName=false;
    String default_txt="Armadillo Workflow Platform v1.0\n"+
                        "A simple pipeline system for phylogenetic analysis\n"+
                        "Copyright (C) 2009-2010\n"+
                        "Etienne Lord*, Mickael Leclercq, Alix Boc, Abdoulaye Banire Diallo and Vladimir Makarenkov\n"+
                        "lord.etienne@courrier.uqam.ca\n"+
                        "Université du Québec à Montréal\n\n"+
                        "Press start to create your first workflow.";


    ////////////////////////////////////////////////////////////////////////////
    /// Constructor

    /** Creates new form Welcome */
    public Ancestrale_Sequence_JIternalFrame(Frame frame) {
        initComponents();
        this.setFrameIcon(Config.icon);
        this.setResizable(false);
        this.frame=frame;

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        
        setLocation((screenSize.width-d.width)/2,
					(screenSize.height-d.height)/3);
        setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        StartjButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        WA_jPanel = new javax.swing.JPanel();
        WA_AlignmentSoftware_JComboBox = new javax.swing.JComboBox();
        jSeparator7 = new javax.swing.JSeparator();
        WA_EvolutionSoftware_JComboBox = new javax.swing.JComboBox();
        WA_EvolutionModel_JComboBox = new javax.swing.JComboBox();
        WA_EnterFilenameOrDirectory_JComboBox = new javax.swing.JComboBox();
        WA_sequenceAligned = new javax.swing.JCheckBox();
        WA_Outgroup_jComboBox = new javax.swing.JComboBox();
        WA_ValidationMethod_JComboBox = new javax.swing.JComboBox();
        panel1 = new java.awt.Panel();
        jPanel4 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jStatusMessage = new javax.swing.JTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Ancestral sequence reconstrution - tutorial");

        StartjButton.setText("Start ->");
        StartjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("This tutorial will show you the basic steps required to infer an ancestral sequence from some DNA sequences.");

        jButton1.setText("test HELP system");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(388, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Introduction", jPanel1);

        WA_jPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 1. Infer phylogenetic tree from sequences"));

        WA_AlignmentSoftware_JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose sequence alignment software", "Kalign (Global Alignment - default options)", "ClustalW (Global Alignment - default options)", "ClustalW2 (Global Alignment - default options)", "Muscle (Local Alignment - default options)" }));
        WA_AlignmentSoftware_JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WA_AlignmentSoftware_JComboBoxActionPerformed(evt);
            }
        });

        WA_EvolutionSoftware_JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose evolution software", "-- Character Methods (Slow but more accurate) --", "phyML", "fastDNAml", "Dnapars", "DnaML", "-- Distance Methods (Fast but with more bias) --", "Dnadist+Neighbor (Neighbor-Joining)", "Dnadist+Neighbor (UPGMA)" }));
        WA_EvolutionSoftware_JComboBox.setToolTipText("<html> List of evolution model available for each software : <br> -  Phyml :  F84 (Default), Kimura, Jukes-Cantor, F81, HKY, GTR.    <br> -  FastDNAml : Default evolution model of this program.    <br> -  Dnapars : Default evolution model of this program.    <br> -  Dnaml : Default evolution model of this program.   <br> -  DnaDist : F84 (Default), Kimura, Jukes-Cantor.    <br> </html>");
        WA_EvolutionSoftware_JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WA_EvolutionSoftware_JComboBoxActionPerformed(evt);
            }
        });

        WA_EvolutionModel_JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose evolutionary model", "Default", "F84", "Kimura", "Jukes-Cantor", "F81", "HKY", "GTR" }));
        WA_EvolutionModel_JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WA_EvolutionModel_JComboBoxActionPerformed(evt);
            }
        });

        WA_EnterFilenameOrDirectory_JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enter input Multi-Fasta ou Multi-Phylip File or Directory", "Choose Files or Directory..." }));
        WA_EnterFilenameOrDirectory_JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WA_EnterFilenameOrDirectory_JComboBoxActionPerformed(evt);
            }
        });

        WA_sequenceAligned.setText("Sequences are already aligned");
        WA_sequenceAligned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WA_sequenceAlignedActionPerformed(evt);
            }
        });

        WA_Outgroup_jComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No outgroup", " " }));

        WA_ValidationMethod_JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Validation Method (optional)", "Bootstrap (100 replicates)", "Bootstrap (1000 replicates)", "JackKnife (100 replicates)", "JackKnife (1000 replicates)", "Permute species for each character (100 replicates)", "Permute species for each character (1000 replicates)", "Permute character order (100 replicates)", "Permute character order (1000 replicates)", "Permute within species (100 replicates)", "Permute within species (1000 replicates)" }));
        WA_ValidationMethod_JComboBox.setEnabled(false);
        WA_ValidationMethod_JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WA_ValidationMethod_JComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout WA_jPanelLayout = new javax.swing.GroupLayout(WA_jPanel);
        WA_jPanel.setLayout(WA_jPanelLayout);
        WA_jPanelLayout.setHorizontalGroup(
            WA_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WA_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WA_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WA_EvolutionModel_JComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 635, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, WA_jPanelLayout.createSequentialGroup()
                        .addComponent(WA_sequenceAligned)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WA_Outgroup_jComboBox, 0, 460, Short.MAX_VALUE))
                    .addComponent(WA_EnterFilenameOrDirectory_JComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 635, Short.MAX_VALUE)
                    .addComponent(WA_ValidationMethod_JComboBox, 0, 635, Short.MAX_VALUE)
                    .addComponent(WA_EvolutionSoftware_JComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 635, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, WA_jPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(WA_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(WA_AlignmentSoftware_JComboBox, 0, 625, Short.MAX_VALUE))))
                .addContainerGap())
        );
        WA_jPanelLayout.setVerticalGroup(
            WA_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WA_jPanelLayout.createSequentialGroup()
                .addComponent(WA_EnterFilenameOrDirectory_JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(WA_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WA_Outgroup_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WA_sequenceAligned))
                .addGap(6, 6, 6)
                .addGroup(WA_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WA_AlignmentSoftware_JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WA_EvolutionModel_JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WA_EvolutionSoftware_JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WA_ValidationMethod_JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WA_jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WA_jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("[1] Inference of a phylogenetic tree", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 687, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("[2] Ancestral sequence reconstruction", jPanel4);

        jLabel1.setText("100 %");

        jStatusMessage.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBox.light"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(StartjButton)
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jStatusMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jStatusMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StartjButton)
                        .addComponent(jLabel1))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartjButtonActionPerformed
        //--Final save
//        workbox.getProject().setName(this.NamejTextField.getText());
//        workbox.getProject().setInstitution(this.InstitutionjTextField.getText());
//        workbox.getProject().setEmail(this.EmailjTextField.getText());
//        config.set("email",this.EmailjTextField.getText());
//        config.set("author", this.NamejTextField.getText());
//        config.set("institution", this.InstitutionjTextField.getText());
//        workbox.getProject().updateDatabase();
//        config.remove("FirstTime");
//        config.Save();
//        this.setVisible(false);
    }//GEN-LAST:event_StartjButtonActionPerformed

    private void WA_AlignmentSoftware_JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WA_AlignmentSoftware_JComboBoxActionPerformed
//        if (this.WA_AlignmentSoftware_JComboBox.getSelectedIndex()==1){
//            this.MalnChoice_ComboBox.setSelectedIndex(0);
//        }
//        if (this.WA_AlignmentSoftware_JComboBox.getSelectedIndex()==2){
//            this.MalnChoice_ComboBox.setSelectedIndex(1);
//        }
//        if (this.WA_AlignmentSoftware_JComboBox.getSelectedIndex()==3){
//            this.MalnChoice_ComboBox.setSelectedIndex(2);
//        }
//        if (this.WA_AlignmentSoftware_JComboBox.getSelectedIndex()==4){
//            this.MalnChoice_ComboBox.setSelectedIndex(3);
//        }
}//GEN-LAST:event_WA_AlignmentSoftware_JComboBoxActionPerformed

    private void WA_EvolutionSoftware_JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WA_EvolutionSoftware_JComboBoxActionPerformed
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==1){
            this.WA_EvolutionSoftware_JComboBox.setSelectedIndex(2);
        }
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==6){
            this.WA_EvolutionSoftware_JComboBox.setSelectedIndex(7);
        }
        
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==7||
                this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==8){
            if (WA_EvolutionSoftware_JComboBox.isEnabled()){
                WA_ValidationMethod_JComboBox.setEnabled(true);
            }
            if (WA_EvolutionModel_JComboBox.getSelectedIndex()==2||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==3||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==4){
                
            } else WA_EvolutionModel_JComboBox.setSelectedIndex(2);
        } else{
            WA_ValidationMethod_JComboBox.setEnabled(false);
            WA_ValidationMethod_JComboBox.setSelectedIndex(0);
        }
        
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==2){
            if (WA_EvolutionModel_JComboBox.getSelectedIndex()==2||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==3||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==4||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==5||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==6||
                    WA_EvolutionModel_JComboBox.getSelectedIndex()==7){
                //McharacterChoice_ComboBox.setSelectedIndex(2);
            } else{
                WA_EvolutionModel_JComboBox.setSelectedIndex(1);
                //McharacterChoice_ComboBox.setSelectedIndex(2);
            }
        }
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==3){
            WA_EvolutionModel_JComboBox.setSelectedIndex(1);
            //McharacterChoice_ComboBox.setSelectedIndex(3);
        }
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==4){
            WA_EvolutionModel_JComboBox.setSelectedIndex(1);
            //McharacterChoice_ComboBox.setSelectedIndex(1);
        }
        if(this.WA_EvolutionSoftware_JComboBox.getSelectedIndex()==5){
            WA_EvolutionModel_JComboBox.setSelectedIndex(1);
            //McharacterChoice_ComboBox.setSelectedIndex(0);
        }
        
    }//GEN-LAST:event_WA_EvolutionSoftware_JComboBoxActionPerformed

    private void WA_EvolutionModel_JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WA_EvolutionModel_JComboBoxActionPerformed
        if (WA_EvolutionModel_JComboBox.getSelectedIndex()==5||
                WA_EvolutionModel_JComboBox.getSelectedIndex()==6||
                WA_EvolutionModel_JComboBox.getSelectedIndex()==7) {
            WA_EvolutionSoftware_JComboBox.setSelectedIndex(2);
        }
        
        if (WA_EvolutionModel_JComboBox.getSelectedIndex()==2||
                WA_EvolutionModel_JComboBox.getSelectedIndex()==3||
                WA_EvolutionModel_JComboBox.getSelectedIndex()==4) {
            WA_EvolutionSoftware_JComboBox.setSelectedIndex(7);
        }
        //MevolutionModelChoice_ComboBox.setSelectedIndex(WA_EvolutionModel_JComboBox.getSelectedIndex());
}//GEN-LAST:event_WA_EvolutionModel_JComboBoxActionPerformed

    private void WA_EnterFilenameOrDirectory_JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WA_EnterFilenameOrDirectory_JComboBoxActionPerformed
        String selection=(String)this.WA_EnterFilenameOrDirectory_JComboBox.getSelectedItem();
        //CAS 1 : On a charger un fichier ou une liste de fichier
        if (selection.startsWith("Choose ")) {
            //RESET COMBOBOX OPTION
            this.WA_EnterFilenameOrDirectory_JComboBox.removeAllItems();
            this.WA_EnterFilenameOrDirectory_JComboBox.addItem("Choose Files or Directory");
            this.WA_Outgroup_jComboBox.removeAllItems();
            this.WA_Outgroup_jComboBox.addItem("No outgroup");
            //CLEAR PROJECT OPTION
            //project.SelectedFile.clear();
            //DISPLAY DIALOG
            JFileChooser jf=new JFileChooser(config.getExplorerPath());
            jf.setMultiSelectionEnabled(true);
            jf.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int result=jf.showOpenDialog(this);
            //CAS 1: On reussi a choisir un fichier
            if (result==JFileChooser.APPROVE_OPTION) {
                config.setExplorerPath(jf.getSelectedFile().getPath());
                File[] files=jf.getSelectedFiles();
                // SAVE IN PROJECT
                for (File f:files) {
                    //project.SelectedFile.add(f);
                }
                // PROCESS
                if (files.length==1) {
                    //Message("Loading "+files[0].getName(),"",this.jInfo);
                    this.WA_EnterFilenameOrDirectory_JComboBox.addItem(files[0].getAbsolutePath());
                    this.WA_EnterFilenameOrDirectory_JComboBox.setSelectedItem(files[0].getAbsolutePath());
                    // READ SEQUENCE
//                    project.nonalignedsequenceList.readSequenceFromFasta(files[0].getAbsolutePath());
//                    if (project.nonalignedsequenceList.getNbSequence()==0) {
//                        project.nonalignedsequenceList.readSequenceFromPhylip(files[0].getAbsolutePath());
//                    }
//                    if (project.nonalignedsequenceList.getNbSequence()==0) {
//                        MessageErreur("Unable to load "+files[0].getName(),"",this.jInfo);
//                    } else
//                        //WE HAVE SEQUENCES PUT IN COMBOBOX AND DISPLAY
//                        if (project.nonalignedsequenceList.getNbSequence()>1) {
//                            //Update combobox
//                            for (Sequence s:project.nonalignedsequenceList.getSeq()) {
//                                this.WA_Outgroup_jComboBox.addItem(s.getName());
//                                s.setSelected(true);
//                            }
//                            String stri=""+project.nonalignedsequenceList.getNbSequence()+" sequences loaded.";
//                            Message(stri,"", this.jInfo);
//                            //UPDATA TABLE
//                            SequenceTableModel tm=(SequenceTableModel) this.jTable1.getModel();
//                            tm.data.clear();
//                            tm.setData(project.nonalignedsequenceList);
//                            tm.fireTableDataChanged();
//                            this.jTable1.setModel(tm);
//                        } else {
//                        //WE HAVE 1 SEQUENCE
//                        MessageErreur("Warning, only 1 sequence found.","", this.jInfo);
//                        //UPDATA TABLE
//                        SequenceTableModel tm=(SequenceTableModel) this.jTable1.getModel();
//                        tm.data.clear();
//                        tm.setData(project.nonalignedsequenceList);
//                        tm.fireTableDataChanged();
//                        this.jTable1.setModel(tm);
//                        }
                    
                } else if (files.length>1) {
                    String stri="";
                    for (File f:files) stri+=f.getAbsolutePath()+",";
                    this.WA_EnterFilenameOrDirectory_JComboBox.addItem(stri);
                    this.WA_EnterFilenameOrDirectory_JComboBox.setSelectedItem(stri);
                }
                //CAS 1.5 : CANCEL :: ON REMET LES OPTIONS
            } else {
                this.WA_EnterFilenameOrDirectory_JComboBox.removeAllItems();
                this.WA_EnterFilenameOrDirectory_JComboBox.addItem("Enter input Multi-Fasta ou Multi-Phylip File or Directory");
                this.WA_EnterFilenameOrDirectory_JComboBox.addItem("Choose Files or Directory");
            }
        } else if (!selection.startsWith("Enter input")) {
            //CAS 2 : Manual file input, on essaie de charge
            this.WA_EnterFilenameOrDirectory_JComboBox.addItem(selection);
            this.WA_EnterFilenameOrDirectory_JComboBox.setSelectedItem(selection);
//            project.nonalignedsequenceList.readSequenceFromFasta(selection);
//            if (project.nonalignedsequenceList.getNbSequence()==0)
//                project.nonalignedsequenceList.readSequenceFromPhylip(selection);
//            if (project.nonalignedsequenceList.getNbSequence()==0)  System.out.println("Unable to load "+selection);
//            //WE HAVE SEQUENCES PUT IN COMBOBOX AND DISPLAY
//            if (project.nonalignedsequenceList.getNbSequence()>0) {
//                this.WA_Outgroup_jComboBox.removeAllItems();
//                this.WA_Outgroup_jComboBox.addItem("No Outgroup");
//                for (Sequence s:project.nonalignedsequenceList.getSeq()) this.WA_Outgroup_jComboBox.addItem(s.getName());
//            }
        }
}//GEN-LAST:event_WA_EnterFilenameOrDirectory_JComboBoxActionPerformed

    private void WA_sequenceAlignedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WA_sequenceAlignedActionPerformed
        
}//GEN-LAST:event_WA_sequenceAlignedActionPerformed

    private void WA_ValidationMethod_JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WA_ValidationMethod_JComboBoxActionPerformed
        //--Validation (bootstrap)
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==0){
            //this.MtestTree_ComboBox.setSelectedIndex(0);
        }
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==1){
            //this.MtestTree_ComboBox.setSelectedIndex(1);
            //this.MtestTreeReplicates_TextField.setText("100");
        }
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==2){
            //this.MtestTree_ComboBox.setSelectedIndex(1);
            //this.MtestTreeReplicates_TextField.setText("1000");
        }
        
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==3){
            //this.MtestTree_ComboBox.setSelectedIndex(2);
            //this.MtestTreeReplicates_TextField.setText("100");
        }
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==4){
            //this.MtestTree_ComboBox.setSelectedIndex(2);
            //this.MtestTreeReplicates_TextField.setText("1000");
        }
        
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==5){
            //this.MtestTree_ComboBox.setSelectedIndex(3);
            //this.MtestTreeReplicates_TextField.setText("100");
        }
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==6){
            //this.MtestTree_ComboBox.setSelectedIndex(3);
            //this.MtestTreeReplicates_TextField.setText("1000");
        }
        
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==7){
            //this.MtestTree_ComboBox.setSelectedIndex(4);
            //this.MtestTreeReplicates_TextField.setText("100");
        }
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==8){
            //this.MtestTree_ComboBox.setSelectedIndex(4);
            //this.MtestTreeReplicates_TextField.setText("1000");
        }
        
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==9){
            //this.MtestTree_ComboBox.setSelectedIndex(5);
            //this.MtestTreeReplicates_TextField.setText("100");
        }
        if (this.WA_ValidationMethod_JComboBox.getSelectedIndex()==10){
            //this.MtestTree_ComboBox.setSelectedIndex(5);
            //this.MtestTreeReplicates_TextField.setText("1000");
        }
}//GEN-LAST:event_WA_ValidationMethod_JComboBoxActionPerformed

   
        
        
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        workflow_properties prop=new workflow_properties();
        prop.load("AncestorCC.properties", config.propertiesPath());
        HelpEditor help = new HelpEditor(this.frame, false,prop);
        help.setVisible(true);
      
        
    }//GEN-LAST:event_jButton1ActionPerformed

    ///////////////////////////////////////////////////////////////////////////
    /// MESSAGE FONCTION

    /**
     * Affiche un message dans la status bar
     * La provenance peut être mise dans un tooltip
     * @param text Le texte
     * @param tooltip Le tooltip texte
     */
    void Message(String text, String tooltip) {
        this.jStatusMessage.setEnabled(true);
        this.jStatusMessage.setForeground(new java.awt.Color(0, 51, 153));
        this.jStatusMessage.setBackground(Color.WHITE);
        this.jStatusMessage.setToolTipText(tooltip);
        this.jStatusMessage.setText(text);
    }

    /**
     * Affiche un message d'erreur en rouge dans la status bar
     * La provenance peut être mise dans un tooltip
     * @param text Le texte
     * @param tooltip Le tooltip texte
     */
    void MessageError(String text, String tooltip) {
        this.jStatusMessage.setEnabled(true);
        this.jStatusMessage.setForeground(Color.RED);
        this.jStatusMessage.setBackground(Color.WHITE);
        this.jStatusMessage.setToolTipText(tooltip);
        this.jStatusMessage.setText(text);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartjButton;
    private javax.swing.JComboBox WA_AlignmentSoftware_JComboBox;
    private javax.swing.JComboBox WA_EnterFilenameOrDirectory_JComboBox;
    private javax.swing.JComboBox WA_EvolutionModel_JComboBox;
    private javax.swing.JComboBox WA_EvolutionSoftware_JComboBox;
    private javax.swing.JComboBox WA_Outgroup_jComboBox;
    private javax.swing.JComboBox WA_ValidationMethod_JComboBox;
    private javax.swing.JPanel WA_jPanel;
    private javax.swing.JCheckBox WA_sequenceAligned;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField jStatusMessage;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables

   

}
