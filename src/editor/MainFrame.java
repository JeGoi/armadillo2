/*
 *  Armadillo Workflow Platform v1.0
 *  A simple pipeline system for phylogenetic analysis
 *  
 *  Copyright (C) 2009-2011  Etienne Lord, Mickael Leclercq
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package editor;


import Class.ClassTableModel;
import Class.classViewJDialog;
import workflows.workflow_properties;
import configuration.Config;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import workflows.workflow_properties_dictionnary;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 2009-06-29, 23:57:00
 */

/**
 *
 * @author Etienne
 */
public class MainFrame extends javax.swing.JFrame {

    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    Config config=new Config();
    propertiesEditorSmallWorkflowJDialog editorWorkflowProperties;
    propertiesEditorJDialog editorPreference;

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        workflow_properties tmp=new workflow_properties();
        editorPreference=new propertiesEditorJDialog(this, tmp,"Preference");
        editorWorkflowProperties=new propertiesEditorSmallWorkflowJDialog(this,tmp,"");
        setTitle(config.get("editorApplicationName")+" - "+config.get("editorVersion"));
        setIconImage(config.image);
        Message("Please choose a properties to edit it...","");
        setPropertiesList();
        // Set position and set Visible
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
					(screenSize.height-d.height)/2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jStatusMessage = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        PropertiesjPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        DeletejButton = new javax.swing.JButton();
        DuplicatejButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setResizable(false);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton2.setText("Properties");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        jButton3.setText("Class");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton7.setText("Editor");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton4.setText("Custom Script");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jStatusMessage.setText("Info");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        DeletejButton.setText("Delete");
        DeletejButton.setToolTipText("Delete from disk the selected properties");
        DeletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletejButtonActionPerformed(evt);
            }
        });

        DuplicatejButton.setText("Duplicate");
        DuplicatejButton.setToolTipText("Duplicate the selected properties file");
        DuplicatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DuplicatejButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Edit");
        jButton1.setToolTipText("Load in the editor the current selected properties.");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Add");
        jButton5.setToolTipText("Add a new blank properties file");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Rename");
        jButton6.setToolTipText("Add a new blank properties file");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PropertiesjPanelLayout = new javax.swing.GroupLayout(PropertiesjPanel);
        PropertiesjPanel.setLayout(PropertiesjPanelLayout);
        PropertiesjPanelLayout.setHorizontalGroup(
            PropertiesjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PropertiesjPanelLayout.createSequentialGroup()
                .addGroup(PropertiesjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                    .addGroup(PropertiesjPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(DeletejButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DuplicatejButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        PropertiesjPanelLayout.setVerticalGroup(
            PropertiesjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PropertiesjPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PropertiesjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(DeletejButton)
                    .addComponent(DuplicatejButton)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Properties", PropertiesjPanel);

        jMenu1.setText("File");

        jMenuItem1.setText("Quit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jStatusMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jStatusMessage)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Note: UGLY CODE INSIDE!
     * @param evt
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void DeletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletejButtonActionPerformed
        String propertiesToDelete=(String)this.jList1.getSelectedValue();
        if (propertiesToDelete!=null) {
            String msg="<html><br>Are you really sure you want to permanently delete FROM DISK "+propertiesToDelete+" ?</html>";
            Object[] options = {"Yes, delete properties file","No, cancel"};
            int n = JOptionPane.showOptionDialog(this,msg,"Warning! Permanently delete properties file?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options, options[0]);
            switch (n) {
                //0. Delete
                case 0:if (deleteProperties(propertiesToDelete)) setPropertiesList();
                return; //HACK TO LEAVE THIS FUNCTION
                // 1. Cancel
                case 1: MessageErreur("Activity database was not deleted.","");
                return; //HACK TO LEAVE THIS FUNCTION
            }
        }
    }//GEN-LAST:event_DeletejButtonActionPerformed

    private void DuplicatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DuplicatejButtonActionPerformed
        String propertiesToDuplicate=(String)this.jList1.getSelectedValue();
        if (propertiesToDuplicate!=null) {
            RenamePropertiesJDialog rp=new RenamePropertiesJDialog(this, propertiesToDuplicate,"Create");
            rp.setVisible(true);
            if (!rp.propertiesName.equals("")) {
                if (duplicateProperties(propertiesToDuplicate, rp.propertiesName)) setPropertiesList();
            }
        }
}//GEN-LAST:event_DuplicatejButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String selected=(String)this.jList1.getSelectedValue();
        if (selected!=null) {
            editorWorkflowProperties.setProperties(selected, config.get("propertiesPath"));
            //editorWorkflowProperties.setTitle(tmp.getName());
            editorWorkflowProperties.setVisible(true);
        }
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

            RenamePropertiesJDialog rp=new RenamePropertiesJDialog(this, "","Create New Properties");
            rp.setVisible(true);
            if (!rp.propertiesName.equals("")) {
                workflow_properties tmp=new workflow_properties();
                tmp.filename=rp.propertiesName;
                tmp.put("Name", rp.propertiesName);//--Set propertiesName as defaultName
                tmp.put("defaultColor", "BLUE");   //--I like BLUE
                tmp.put("ObjectType", "Program"); //--Set as program by default
                tmp.save(tmp.filename, config.get("propertiesPath"));
                setPropertiesList();
            }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         String propertiesToRename=(String)this.jList1.getSelectedValue();
        if (propertiesToRename!=null) {
            RenamePropertiesJDialog rp=new RenamePropertiesJDialog(this, propertiesToRename,"Rename");
            rp.setVisible(true);
            if (!rp.propertiesName.equals("")) {
                if (renameProperties(propertiesToRename, rp.propertiesName)) setPropertiesList();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        classViewJDialog cv=new classViewJDialog(this);
        cv.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       editorViewJDialog cv=new editorViewJDialog(this);
        cv.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed


     ///////////////////////////////////////////////////////////////////////////
    /// MESSAGE FONCTION

    /**
     * Affiche un message dans la status bar
     * La provenance peut être mise dans un tooltip
     * @param text Le texte
     * @param tooltip Le tooltip texte
     */
    void Message(String text, String tooltip) {
        this.jStatusMessage.setEnabled(true);
        this.jStatusMessage.setForeground(new java.awt.Color(0, 51, 153));
        this.jStatusMessage.setBackground(Color.WHITE);
        this.jStatusMessage.setToolTipText(tooltip);
        this.jStatusMessage.setText(text);
    }

    /**
     * Affiche un message d'erreur en rouge dans la status bar
     * La provenance peut être mise dans un tooltip
     * @param text Le texte
     * @param tooltip Le tooltip texte
     */
    void MessageErreur(String text, String tooltip) {
        this.jStatusMessage.setEnabled(true);
        this.jStatusMessage.setForeground(Color.RED);
        this.jStatusMessage.setBackground(Color.WHITE);
        this.jStatusMessage.setToolTipText(tooltip);
        this.jStatusMessage.setText(text);
    }

    ////////////////////////////////////////////////////////////////////////////
    /// Other function
    
    /**
     * This duplicate a properties to a new name
     * @param sourceName
     * @param newName
     * @return True if success
     */
    private boolean duplicateProperties(String sourceName, String newName) {
        workflow_properties tmp=new workflow_properties();
        if (tmp.load(sourceName, config.get("propertiesPath"))) {
            if (tmp.save(newName, config.get("propertiesPath"))) return true;
        }
        MessageErreur("Unable to duplicate "+sourceName,"");
        return false;
    }

    /**
     * Rename properties
     * Note: In fact, we duplicate the properties to a new name and we
     * delete the first file...
     * @param sourceName
     * @param newName
     * @return
     */
    private boolean renameProperties(String sourceName, String newName) {
       if (duplicateProperties(sourceName, newName)) {
           if (deleteProperties(sourceName)) return true;
        }
        MessageErreur("Unable to rename "+sourceName,"");
        return false;
    }

    /**
     * This delete from disk a properties in the propertiesPath
     * @param propertiesName
     * @return True if success
     */
    private boolean deleteProperties(String propertiesName) {
        File fileToDelete=new File(config.get("propertiesPath")+File.separator+propertiesName);
        if (fileToDelete.delete()) return true;
        MessageErreur("Unable to delete "+propertiesName+" from "+config.get("propertiesPath"),"");
        return false;
    }

       /**
     * This list in the main JList the properties found in Armadillo//data
     */
    private void setPropertiesList() {
        String[] propertiesList=workflow_properties.loadPropertieslisting(config.get("propertiesPath"));
        this.jList1.setListData(propertiesList);

        //this.propertiesPath_jTextField.setText(config.get("propertiesPath"));
    }

    


    ////////////////////////////////////////////////////////////////////////////
    /// Main


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeletejButton;
    private javax.swing.JButton DuplicatejButton;
    private javax.swing.JPanel PropertiesjPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jStatusMessage;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

}
