/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import editor.EditorInterface;
import configuration.Util;
import editor.clusterEditorProgram;
import editor.dockerEditorProgram;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * 
 */
public class miRcheck_patscan_Editors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form miRchekEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    public static HashMap<JCheckBox,JSpinner> DictBoxSpinner = new HashMap<JCheckBox,JSpinner>();
    public static HashMap<JCheckBox,JTextField> DictBoxTextField = new HashMap<JCheckBox,JTextField>();
    public static HashMap<JCheckBox,JComboBox> DictBoxComboBox = new HashMap<JCheckBox,JComboBox>();
    public static HashMap<JRadioButton,JSpinner> DictRadioButtonSpinner = new HashMap<JRadioButton,JSpinner>();
    public static HashMap<JRadioButton,JTextField> DictRadioButtonTextField = new HashMap<JRadioButton,JTextField>();
    public static ArrayList<HashMap> listDicts = new ArrayList<HashMap>();
    
    public miRcheck_patscan_Editors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        miRcheck = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        name_jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Options_panel = new javax.swing.JTabbedPane();
        Patscan_panel = new javax.swing.JPanel();
        P_mismatches_valueInt = new javax.swing.JSpinner();
        P_deletions_valueInt = new javax.swing.JSpinner();
        P_insertions_valueInt = new javax.swing.JSpinner();
        P_mismatches_box = new javax.swing.JCheckBox();
        P_deletions_box = new javax.swing.JCheckBox();
        P_insertions_box = new javax.swing.JCheckBox();
        default_options_jbutton = new javax.swing.JRadioButton();
        advanced_options_jbutton = new javax.swing.JRadioButton();
        reset_jButton = new javax.swing.JButton();
        stop_jButton = new javax.swing.JButton();
        run_jButton = new javax.swing.JButton();
        ClusterProgramButton = new javax.swing.JButton();
        docker_jButton = new javax.swing.JButton();
        close_jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        miRcheck.setPreferredSize(new java.awt.Dimension(405, 604));
        miRcheck.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                miRcheckComponentShown(evt);
            }
        });

        name_jTextField1.setText("miRcheck");
        name_jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                name_jTextField1FocusLost(evt);
            }
        });

        jLabel1.setText("Name");

        Options_panel.setPreferredSize(new java.awt.Dimension(341, 156));
        Options_panel.setRequestFocusEnabled(false);

        P_mismatches_valueInt.setModel(new javax.swing.SpinnerNumberModel(-1, -1, null, 1));
        P_mismatches_valueInt.setName("P_mismatches_valueInt"); // NOI18N
        P_mismatches_valueInt.setPreferredSize(new java.awt.Dimension(118, 28));
        P_mismatches_valueInt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                P_mismatches_valueIntStateChanged(evt);
            }
        });

        P_deletions_valueInt.setModel(new javax.swing.SpinnerNumberModel(-1, -1, null, 1));
        P_deletions_valueInt.setName("P_deletions_valueInt"); // NOI18N
        P_deletions_valueInt.setPreferredSize(new java.awt.Dimension(118, 28));
        P_deletions_valueInt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                P_deletions_valueIntStateChanged(evt);
            }
        });

        P_insertions_valueInt.setModel(new javax.swing.SpinnerNumberModel(-1, -1, null, 1));
        P_insertions_valueInt.setName("P_insertions_valueInt"); // NOI18N
        P_insertions_valueInt.setPreferredSize(new java.awt.Dimension(118, 28));
        P_insertions_valueInt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                P_insertions_valueIntStateChanged(evt);
            }
        });

        P_mismatches_box.setText("mismatches");
        P_mismatches_box.setName("P_mismatches_box"); // NOI18N
        P_mismatches_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P_mismatches_boxActionPerformed(evt);
            }
        });

        P_deletions_box.setText("deletions");
        P_deletions_box.setName("P_deletions_box"); // NOI18N
        P_deletions_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P_deletions_boxActionPerformed(evt);
            }
        });

        P_insertions_box.setText("insertions");
        P_insertions_box.setName("P_insertions_box"); // NOI18N
        P_insertions_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P_insertions_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Patscan_panelLayout = new javax.swing.GroupLayout(Patscan_panel);
        Patscan_panel.setLayout(Patscan_panelLayout);
        Patscan_panelLayout.setHorizontalGroup(
            Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Patscan_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P_mismatches_box)
                    .addComponent(P_deletions_box)
                    .addComponent(P_insertions_box))
                .addGap(18, 18, 18)
                .addGroup(Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P_insertions_valueInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P_deletions_valueInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P_mismatches_valueInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        Patscan_panelLayout.setVerticalGroup(
            Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Patscan_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(P_mismatches_valueInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P_mismatches_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(P_deletions_valueInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P_deletions_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Patscan_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(P_insertions_valueInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P_insertions_box))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Options_panel.addTab("advanced options", Patscan_panel);

        buttonGroup1.add(default_options_jbutton);
        default_options_jbutton.setText("default options");
        default_options_jbutton.setName("default_options_jbutton"); // NOI18N
        default_options_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                default_options_jbuttonActionPerformed(evt);
            }
        });

        buttonGroup1.add(advanced_options_jbutton);
        advanced_options_jbutton.setText("advanced options");
        advanced_options_jbutton.setName("advanced_options_jbutton"); // NOI18N
        advanced_options_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advanced_options_jbuttonActionPerformed(evt);
            }
        });

        reset_jButton.setForeground(new java.awt.Color(255, 116, 0));
        reset_jButton.setText("Reset");
        reset_jButton.setName("reset_jButton"); // NOI18N

        stop_jButton.setForeground(new java.awt.Color(255, 0, 0));
        stop_jButton.setText("Stop");
        stop_jButton.setMaximumSize(new java.awt.Dimension(71, 29));
        stop_jButton.setMinimumSize(new java.awt.Dimension(71, 29));
        stop_jButton.setName("stop_jButton"); // NOI18N
        stop_jButton.setPreferredSize(new java.awt.Dimension(71, 29));

        run_jButton.setForeground(new java.awt.Color(0, 255, 3));
        run_jButton.setText("Run");
        run_jButton.setMaximumSize(new java.awt.Dimension(71, 29));
        run_jButton.setMinimumSize(new java.awt.Dimension(71, 29));
        run_jButton.setName("run_jButton"); // NOI18N
        run_jButton.setPreferredSize(new java.awt.Dimension(71, 29));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(reset_jButton)
                                .addGap(74, 74, 74)
                                .addComponent(stop_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(run_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Options_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(default_options_jbutton)
                            .addGap(18, 18, 18)
                            .addComponent(advanced_options_jbutton))))
                .addGap(0, 393, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(run_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stop_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset_jButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(default_options_jbutton)
                    .addComponent(advanced_options_jbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Options_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        miRcheck.addTab("miRcheck", jPanel1);

        ClusterProgramButton.setText("Cluster");
        ClusterProgramButton.setMaximumSize(new java.awt.Dimension(91, 29));
        ClusterProgramButton.setMinimumSize(new java.awt.Dimension(91, 29));
        ClusterProgramButton.setPreferredSize(new java.awt.Dimension(91, 29));
        ClusterProgramButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClusterProgramButtonActionPerformed(evt);
            }
        });

        docker_jButton.setText("Docker");
        docker_jButton.setMaximumSize(new java.awt.Dimension(91, 29));
        docker_jButton.setMinimumSize(new java.awt.Dimension(91, 29));
        docker_jButton.setName("docker_jButton"); // NOI18N
        docker_jButton.setPreferredSize(new java.awt.Dimension(91, 29));
        docker_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docker_jButton_ActionPerformed(evt);
            }
        });

        close_jButton.setForeground(new java.awt.Color(0, 0, 255));
        close_jButton.setText("Close");
        close_jButton.setMaximumSize(new java.awt.Dimension(91, 29));
        close_jButton.setMinimumSize(new java.awt.Dimension(91, 29));
        close_jButton.setName("close_jButton"); // NOI18N
        close_jButton.setPreferredSize(new java.awt.Dimension(91, 29));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(close_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(docker_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClusterProgramButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addComponent(miRcheck, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ClusterProgramButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(docker_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(close_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(miRcheck, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void miRcheckComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_miRcheckComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_miRcheckComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void P_mismatches_valueIntStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_P_mismatches_valueIntStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,P_mismatches_box,P_mismatches_valueInt);
    }//GEN-LAST:event_P_mismatches_valueIntStateChanged

    private void P_deletions_valueIntStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_P_deletions_valueIntStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,P_deletions_box,P_deletions_valueInt);
    }//GEN-LAST:event_P_deletions_valueIntStateChanged

    private void P_insertions_valueIntStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_P_insertions_valueIntStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,P_insertions_box,P_insertions_valueInt);
    }//GEN-LAST:event_P_insertions_valueIntStateChanged

    private void P_insertions_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P_insertions_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,P_insertions_box,P_insertions_valueInt);
    }//GEN-LAST:event_P_insertions_boxActionPerformed
 
    private void P_deletions_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P_deletions_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,P_deletions_box,P_deletions_valueInt);
    }//GEN-LAST:event_P_deletions_boxActionPerformed

    private void advanced_options_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advanced_options_jbuttonActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,advanced_options_jbutton,null);
        if (properties.isSet(default_options_jbutton.getName())) {
            properties.remove(default_options_jbutton.getName());
        }
        menuFields();
    }//GEN-LAST:event_advanced_options_jbuttonActionPerformed

    private void default_options_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_default_options_jbuttonActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,default_options_jbutton,null);
        if (properties.isSet(advanced_options_jbutton.getName())) {
            properties.remove(advanced_options_jbutton.getName());
        }
        menuFields();
    }//GEN-LAST:event_default_options_jbuttonActionPerformed

    private void P_mismatches_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P_mismatches_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,P_mismatches_box,P_mismatches_valueInt);
    }//GEN-LAST:event_P_mismatches_boxActionPerformed

    private void name_jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name_jTextField1FocusLost
        // TODO add your handling code here:
        String s = name_jTextField1.getText();
        if (!s.equals("")){
            properties.put("Name", name_jTextField1.getText());
        }
    }//GEN-LAST:event_name_jTextField1FocusLost

    private void ClusterProgramButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClusterProgramButtonActionPerformed
        // TODO add your handling code here:
        clusterEditorProgram clus = new clusterEditorProgram(this.frame, false, properties);
        clus.setVisible(true);
    }//GEN-LAST:event_ClusterProgramButtonActionPerformed

    private void docker_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docker_jButton_ActionPerformed
        // TODO add your handling code here:
        dockerEditorProgram dock = new dockerEditorProgram(this.frame, false, properties);
        dock.setVisible(true);
    }//GEN-LAST:event_docker_jButton_ActionPerformed
    
    /**
    ***************************************************************************
    * Set Properties
    ***************************************************************************
    */
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Dicts prepare
        Util.dictsReset(listDicts,DictBoxSpinner,DictBoxTextField,DictBoxComboBox,DictRadioButtonSpinner,DictRadioButtonTextField);
        DictBoxSpinner.put(this.P_deletions_box,this.P_deletions_valueInt);
        DictBoxSpinner.put(this.P_insertions_box,this.P_insertions_valueInt);
        DictBoxSpinner.put(this.P_mismatches_box,this.P_mismatches_valueInt);
        // Properties Default Options
        this.defaultPgrmValues();
        // Update Saved Properties => usp
        Util.updateSavedProperties(properties,listDicts,name_jTextField1);
        // Set the menu
        this.menuFields();
    }
    
    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    /*******************************************************************
     * Set Menu fields
     ******************************************************************/
    
    private void menuFields() {
        if (properties.isSet(default_options_jbutton.getName())) {
            default_options_jbutton.setSelected(true);
            Util.enabled_Advanced_Options(properties,false,listDicts);
        }
        else if (properties.isSet(advanced_options_jbutton.getName())) {
            advanced_options_jbutton.setSelected(true);
            Util.enabled_Advanced_Options(properties,true,listDicts);
        }
    }

    /*******************************************************************
     * Set With default program values present in properties file
     ******************************************************************/
    private void defaultPgrmValues() {
        boolean b = true;
        if (!(properties.isSet(default_options_jbutton.getName()))
        && !(properties.isSet(advanced_options_jbutton.getName()))
        ) {
            b = false;
        }
        
        Util.getDefaultPgrmValues(properties,b);
    }
    
    /**
     * Set the configuration properties for this object
     */
    
    @Override
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        this.setProperties(properties);
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    @Override
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClusterProgramButton;
    private javax.swing.JTabbedPane Options_panel;
    private javax.swing.JCheckBox P_deletions_box;
    private javax.swing.JSpinner P_deletions_valueInt;
    private javax.swing.JCheckBox P_insertions_box;
    private javax.swing.JSpinner P_insertions_valueInt;
    private javax.swing.JCheckBox P_mismatches_box;
    private javax.swing.JSpinner P_mismatches_valueInt;
    private javax.swing.JPanel Patscan_panel;
    private javax.swing.JRadioButton advanced_options_jbutton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton close_jButton;
    private javax.swing.JRadioButton default_options_jbutton;
    private javax.swing.JButton docker_jButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane miRcheck;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton;
    private javax.swing.JButton run_jButton;
    private javax.swing.JButton stop_jButton;
    // End of variables declaration//GEN-END:variables
}
