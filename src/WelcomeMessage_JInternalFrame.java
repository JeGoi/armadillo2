/*
 *  Armadillo Workflow Platform v1.0
 *  A simple pipeline system for phylogenetic analysis
 *  
 *  Copyright (C) 2009-2011  Etienne Lord, Mickael Leclercq
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */



import configuration.Config;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author Mickael Leclercq
 * @since 2009
 */
public class WelcomeMessage_JInternalFrame extends javax.swing.JInternalFrame implements HyperlinkListener {

    ////////////////////////////////////////////////////////////////////////////
    /// Variables

    MainFrame frame;
    Config config=new Config();
    String default_txt="Armadillo Workflow Platform v1.0\n"+
                        "A simple pipeline system for phylogenetic analysis\n"+
                        "Copyright (C) 2009-2010\n"+
                        "Etienne Lord*, Mickael Leclercq, Alix Boc, Abdoulaye Banire Diallo and Vladimir Makarenkov\n"+
                        "lord.etienne@courrier.uqam.ca\n"+
                        "Université du Québec à Montréal\n";

    /**
     * Display a Welcome Message 
     * @param parent
     * @param modal : should be false
     * @param title : title of the page
     * @param page : help page (URL) or help text (String)
     * @param textType : true for an URL, false for a String
     */
    public WelcomeMessage_JInternalFrame(MainFrame parent, boolean modal, String title, String page) {
        frame=parent;
        initComponents();
        page=page.toLowerCase();
        this.setFrameIcon(Config.icon);
        //--Display the Welcome Message (Getting started)
            try {
                //--Default URL
                URL url;
                Acknowledgment ack=new Acknowledgment();
                //--Note: this "destroy the getting_startedArmadillo Page...
                ack.createAcknowledgment();
                //--Regenerate the ack
                
                //if (config.isSet("getting_startedArmadillo")) {
                    url=new File(config.get("getting_startedArmadillo")).toURI().toURL();
                //} else {
                    //url=new File(config.dataPath()+File.separator+"Documents"+File.separator+"getting_started.html").toURL();
                //}
                
                
                this.URL_JTextfield.setPage(url);
                this.URL_JTextfield.addHyperlinkListener(this);
               
            } catch (Exception ex) {
                //--Default TXT
                this.URL_JTextfield.setText(default_txt);
            }
        //--
        this.setTitle(config.get("applicationName")+" v"+config.get("version"));
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();        
        setLocation((screenSize.width-d.width)/2,(screenSize.height-d.height)/2-100);
        //--Do we display the Help screen
        if (config.getBoolean("DisplayStartPage")) {
            this.setVisible(true);
        } else {
            this.setVisible(false);
        }       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        URL_JTextfield = new javax.swing.JEditorPane();

        setBackground(java.awt.Color.white);
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        setDoubleBuffered(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        jButton1.setText("<html><b>Close</b></html>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        URL_JTextfield.setEditable(false);
        URL_JTextfield.setText("Armadillo Workflow Platform v1.0\nA simple pipeline system for phylogenetic analysis\n \nCopyright (C) 2009-2010  \nEtienne Lord*, Mickael Leclercq, Alix Boc, Abdoulaye Banire Diallo and Vladimir Makarenkov\nUniversité du Québec à Montréal");
        jScrollPane1.setViewportView(URL_JTextfield);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        this.frame.showWorkflow_and_Toolbox();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane URL_JTextfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void hyperlinkUpdate(HyperlinkEvent e) {
    if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
      try {
        this.URL_JTextfield.setPage(e.getURL());
      } catch(Exception ex) {}
    }
    }

}
